#!/bin/sh

#
# Installation script
#
# 1) cp tssgeneload.config.default tssgeneload.config
# 2) Install
#

Usage=Install

#
#  Function called when the install fails.
#
installFailed ()
{
    echo "Installation Failed: `date`"
    exit 1
}

#
#  Verify the arguments to the script, there shouldn't be any
#
if [ $# -ne 0 ]
then
    echo "Usage: ${Usage}"
    installFailed
fi

#
# Make sure config files exist
#
cd `dirname $0`

# establish the config files
MAIN_CONFIG=tssgeneload.config

# Make sure config file exists and source it
if [ -r ${MAIN_CONFIG} ]
then
    echo "Source ${MAIN_CONFIG}"
    . ${MAIN_CONFIG}
else
    echo "Cannot source configuration file: ${MAIN_CONFIG}"
    installFailed
fi

# Check to see if this is a development installation
#
DEV=""
if [ "${INSTALL_TYPE}" = "dev" ]
then
    DEV="-d"
fi

#
# run DLAInstall for each configuration file
#
echo 'running DLAINSTALL'
${DLAINSTALL} ${DEV}

#
# Create the input directory if it doesn't exist.
#
if [ ! -d ${INPUTDIR} ]
then
    mkdir -p ${INPUTDIR}
fi

# copy the scripts for curator use into a standard location which exists in
# their path statements

# trim any trailing slash from MGIBIN variable
DEPLOY_PATH=`echo "${MGIBIN}" | sed 's./$..'`

if [ "${DEPLOY_PATH}" = "" ]; then
        echo "Warning: MGIBIN variable missing from mgiconfig; cannot deploy curator files"
        exit 0
fi

if [ ! -d ${DEPLOY_PATH} ]; then
        # failure to deploy is not a fatal error; could happen during
        # development under a home directory
        echo "Warning: ${DEPLOY_PATH} does not exist; curator scripts were not copied."
        exit 0
fi

if [ -d ${DEPLOY_PATH} ]; then
        # copy files, change permissions, and check for errors
        # deployment errors are non-fatal, as they can occur regularly in an
        # SE's development area

        for file in runTssGeneQC publishTssGene
        do  
                cp bin/${file} ${DEPLOY_PATH}
                if [ $? -ne 0 ]; then
                        echo "Warning: Failed to copy ${file} to ${DEPLOY_PATH}"
                fi  

                chmod 755 ${DEPLOY_PATH}/${file}
                if [ $? -ne 0 ]; then
                        echo "Warning: Failed to change permissions on ${DEPLOY_PATH}/${file}"
                fi  
        done
        echo "Deployed curator files to ${DEPLOY_PATH}"
fi

exit 0

